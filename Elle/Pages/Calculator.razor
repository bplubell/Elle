@using Elle.Models
@inherits Elle.ViewModels.CalculatorViewModel

<div class="row mb-3">
    <div class="col-3 variableName">
        Variable name
    </div>
    <span class="d-flex align-items-center invisible" style="font-size: larger;">=</span>
    <div class="col">
        Expression
    </div>
    <div class="col-2">
        Result
    </div>
    <button class="btn btn-outline-danger invisible">
        <span class="oi oi-trash d-flex align-items-center"></span>
    </button>
</div>

@foreach ((Expression expression, int index) in Expressions.Select((value, i) => (value, i)))
{
    <div class="row mb-3">
        <div class="col-3 variableName">
            <input type="text" class="form-control @(ExpressionNameIsValid(expression.Name) ? "" : "is-invalid")" bind="@expression.Name" />
        </div>
        <span class="d-flex align-items-center" style="font-size: larger;">=</span>
        <div class="col">
            <input type="text" class="form-control" bind="@expression.Value" />
        </div>
        <div class="col-2">
            <input type="text" class="form-control" bind="@expression.Result" readonly />
        </div>
        <button class="btn btn-outline-danger" onclick="@(() => RemoveExpression(index))">
            <span class="oi oi-trash d-flex align-items-center"></span>
        </button>
    </div>
}

<div class="row mb-3">
    <div class="col">
        <button class="btn btn-outline-primary" onclick="@AddExpression">
            <span class="oi oi-plus d-flex align-items-center"></span>
        </button>
    </div>
</div>
